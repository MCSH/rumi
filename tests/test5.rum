printInt := (i: int) -> unit;
printString := (s: string) -> unit;
malloc := (i: int) -> *any;
free := (i: *any) -> unit;
printf := (f: string, a: ...any)->unit;

bf := (v: bool) -> bool{
  printf("Called with %d\n", v);
  return v;
}

main := () -> int{

  a: bool = true;
  a = false;

  if(!a){
    printf("Inside if\n");
  } else {
    printf("inside else\n");
  }

  i := 3;

  if(i - 1 > 1){
    printf("Inside if\n");
  } else {
    printf("inside else\n");
  }

  if(i < 4)printf("Correct\n"); else printf("Wrong!\n");
  if(i <= 3)printf("Correct\n"); else printf("Wrong!\n");
  if(i >= 3)printf("Correct\n"); else printf("Wrong!\n");
  if(i > 2)printf("Correct\n"); else printf("Wrong!\n");
  if(i != 2)printf("Correct\n"); else printf("Wrong!\n");

  if(100) printf("Sanity Check for boolean integers\n"); else printf("WRONG!!!\n");

  while(i){
    printf("%d * %d = %d\n", i, i, i*i);
    i = i -1;
  }

  i = 15;

  if((i%5 != 0) && (i%3 != 0)){
    printf("Wrong!\n");
  } else {
    printf("Correct!\n");
  }

  if(bf(false) || bf(true))
  //if(false || true)
  printf("Correct\n");
  else
  printf("Wrong\n");

  p : * int = 0;

  if(p) printf("Wrong ptr!\n");
  else printf("Correct ptr!\n");

  return 0;
}