
malloc := (s: u64) -> *u8;
printf := (t: string, c: ...any)->int;

MyStruct : struct{
  a : int;
  b : int;
  c : s32;
  d : f64;
}

stBuilder := (a: int) -> MyStruct{
  ans: MyStruct;
  ans .a = a;
  ans.b = 0;
  ans.c = 0;
  ans.d = 3;
  return ans;
}

stPrinter := (m: MyStruct) -> void{
  printf("a=%d, b=%d, c=%d, d=%f\n", m.a, m.b, m.c, m.d);
  return;
}

main := ()-> int{

  ptr : *int;

  ptr = malloc(sizeof(int))->*int;

  *ptr = 2;

  m: MyStruct;

  printf("*ptr=%d\n", *ptr);

  printf("sizeof(MyStruct)=%d\n", sizeof(MyStruct));
  printf("sizeof(*MyStruct)=%d\n", sizeof(*MyStruct));

  printf("sizeof(f64)=%d\n", sizeof(f64));
  printf("sizeof(s64)=%d\n", sizeof(s64));
  printf("sizeof(s8)=%d\n", sizeof(s8));

  tmp := stBuilder(3);

  messs := 41;

  printf("tmp.a=%d\n", tmp.a);

  stPrinter(tmp);

  return 0;
}